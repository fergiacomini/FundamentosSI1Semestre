1)	O que é o insumo, ou entrada, em um sistema de informação?

2)	Onde podemos coletar dados para sistemas ? Explique e cite exemplos.

3)	Explique o que é um desenvolvedor backend, frontend, e full stack;

4)	Qual a diferença entre frontend e designer?

5)	Quem é o responsável por manter um servidor de banco de dados e quais são suas obrigações?
R: Responsável é o DBA(database adminstrator), ele deve ser agil em realizar manutenções e zelar pela integridade do banco de dados.

6)	Que dados uma nota fiscal eletrônica possui? Cite todos e o objetivo de ter esses dados.
R: Dados do Emitente (você); Dados do Destinatário (seu cliente); Produto(s) ou Serviço(s) vendido(s); Nome do Produto ou Serviço; Tipo; Quantidade; Valor;   Unitário; Valor Total; Peso Líquido Total; Peso Bruto Total; NCM; CEST (Código Especificador de Substituição Tributária); Tributação:; ICMS; Situação Tributária; Origem; Natureza da operação; Forma de pagamento; CFOP (Códigos Fiscais de Operações e Prestações); Base de Cálculo do ICMS; Valor Total do ICMS; Base de Cálculo do ICMS ST; Valor Total do ICMS ST; Valor Total dos produtos e serviços; Valor Total do Frete; Valor Total do Seguro; Valor Total do Desconto; Outras Despesas acessórias; Valor Total da NF-e; Valor aproximado total de tributos federais, estaduais e municipais.

7)	Quais os benefícios em versionar código fonte em ambientes como o GitHub?

R: Mantém o código fonte centralizado e seguro, facilita trabalho em equipes uma vez que todos possuem acesso ao mesmo código, realiza ‘merges’ automáticos, o que facilita a integração do código entre membros da equipe, mantém histórico com todas as alterações realizadas, permite retornar uma versão anterior do código com facilidade, permite integração com servidores de integração contínua, utilizado para automatizar o processo de deploy da aplicação.

8)	Como funciona o fluxo de trabalho e quais os benefícios em ter o trabalho dividido nas seguintes etapas: a fazer, fazendo, feito.
R: Pois você controla as metas necessárias, o trabalho fica mais organizado e produtivo,deixando o fluxo de projetos mais rápido. Você tem controle de quem esta fazendo determinada atividade e quais atividades ja foram realizadas.

9)	Como você imagina que seja a criação e desenvolvimento de um software? Explique detalhadamente cada atividade e porque ela acontece.
R:
Fase de Diagnóstico: Origem do problema, particularidades da situação atual do problema, prazo estipulado para a solução deste problema, exigência geradas por este problema, abrangência deste problema, disponibilidade de orçamento para investimento em soluções, urgência de uma solução para este problema.
 
Levantamento e Análise de requisitos: Nesta fase de Levantamento e Análise de requisitos, deve-se pensar em alternativas de solução. Exige muito cuidado e atenção por parte do time de desenvolvimento. Ou seja, é extremamente importante que nenhum detalhe ou requisito seja esquecido ou deixado de lado.
Caso contrário, o desenvolvimento pode ser interrompido e o produto final pode sofrer com alterações inesperadas ou prazos alterados.
Após o levantamento de requisitos, é feita a análise. Análise consiste na definição de atividades, alocações de membros, definição de prazos, entre outros.
E por fim, é feita uma breve validação. Essa validação é feita avaliando-se a eficiência e relevância de todos os requisitos levantados.

Fase de Desenvolvimento: Os grupos se organizam, as tarefas são organizadas, e os responsáveis iniciam o desenvolvimento do software. Um dos métodos ágeis mais conhecido é chamado de Scrum.
O método Scrum consiste na divisão do projeto todo em atividades menores, e na execução simultânea destas atividades menores (em curtos períodos de tempo, os chamados “sprints”).
Ao mesmo tempo são feitos testes validando a funcionalidade de cada módulo.

Etapa de Implantação: O código é instalado no ambiente do cliente (sistema operacional, servidor específico, entre outros). São criados Manuais do Sistema, que auxiliam o entendimento do produto final. Estes materiais facilitam um possível treinamento para as pessoas que usarão futuramente o novo software. E caso necessário, também é realizada uma migração/importação de dados e informações antigas para o novo software.

10)	Explique para que serve e as principais funcionalidades do Trello.

R: O Trello é um sistema de quadro virtual para gerenciamento de tarefas que segue o método "kanban", muito usado no desenvolvimento com Scrum. Ele permite a criação de diversos quadros, nos quais podemos criar quantas colunas quisermos. Dentro de cada coluna é possível adicionar um ou mais "cards" (que são as tarefas propriamente ditas), contendo o conteúdo que o usuário desejar.

11)	Explique para que serve e as principais funcionalidades do Slack.

R: Slack. Ferramenta de comunicação. Criação de espaços. Criação de canais. Integração de plugins de produtividade. Integração de ferramentas, tais como o Trello. Equipes podem se comunicar rapidamente com mensagens de texto e voz, além de permitir o envio de vídeos e documentos, mantendo tudo organizado e centralizado. O conteúdo das conversas fica disponível apenas entre os membros da equipe, e o aplicativo permite saber quem já visualizou sua publicação.

12)	Explique para que serve e as principais funcionalidades do Github.

R: O Git é um sistema open-source de controle de versão utilizado pela grande maioria dos desenvolvedores atualmente. Com ele podemos criar todo histórico de alterações no código do nosso projeto e facilmente voltar para qualquer ponto para saber como o código estava naquela data.
